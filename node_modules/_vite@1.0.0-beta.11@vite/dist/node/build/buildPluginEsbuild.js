"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const fs_extra_1 = __importDefault(require("fs-extra"));
const esbuildService_1 = require("../esbuildService");
exports.createEsbuildPlugin = async (minify, jsx) => {
    const jsxConfig = esbuildService_1.resolveJsxOptions(jsx);
    return {
        name: 'vite:esbuild',
        resolveId(id) {
            if (id === esbuildService_1.vueJsxPublicPath) {
                return esbuildService_1.vueJsxPublicPath;
            }
        },
        load(id) {
            if (id === esbuildService_1.vueJsxPublicPath) {
                return fs_extra_1.default.readFileSync(esbuildService_1.vueJsxFilePath, 'utf-8');
            }
        },
        async transform(code, id) {
            const isVueTs = /\.vue\?/.test(id) && id.endsWith('lang.ts');
            if (esbuildService_1.tjsxRE.test(id) || isVueTs) {
                return esbuildService_1.transform(code, id, {
                    ...jsxConfig,
                    ...(isVueTs ? { loader: 'ts' } : null)
                }, jsx);
            }
        },
        async renderChunk(code, chunk) {
            if (minify) {
                return esbuildService_1.transform(code, chunk.fileName, {
                    minify: true
                });
            }
            else {
                return null;
            }
        }
    };
};
//# sourceMappingURL=buildPluginEsbuild.js.map